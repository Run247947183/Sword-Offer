/*
 public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
*/
public class Solution {

    public ListNode EntryNodeOfLoop(ListNode pHead)
    {
        if (pHead == null || pHead.next == null) {
            return null;
        }
        ListNode slow = pHead;
        ListNode fast = pHead;
        boolean tag = false;
        // 1. 判断是否该链表带环
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (slow == fast) {
                tag = true;
                break;
            }
        }
        if (!tag) {
            return null;
        } else {
            // 2. 计算出环中有几个节点
            int count = 1;
            fast = fast.next;
            while (fast != slow) {
                fast = fast.next;
                count++;
            }
            // 3. 找到入口节点
            fast = pHead;
            slow = pHead;
            for (int i = 0; i < count; i++) {
                fast = fast.next;
            }
            while (fast != slow) {
                slow = slow.next;
                fast = fast.next;
            }
            return slow;
        }
    }
}
