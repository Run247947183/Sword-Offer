牛客网：
public class Solution {
    public int FirstNotRepeatingChar(String str) {
        if (str == null) {
            return -1;
        }
        if (str.length() == 1) {
            return 0;
        }
        for (int i = 0; i < str.length(); i++) {
            if (i == str.length() - 1) {
                return str.length() - 1;
            }
            StringBuilder sb = new StringBuilder();
            char tmp = str.charAt(i);
            sb.append(str.substring(0, i));
            sb.append(str.substring(i + 1));
            if (sb.toString().indexOf(tmp) < 0) {
                return i;
            }
        }
        return -1;
    }
}

LeetCode：
class Solution {
    public char firstUniqChar(String s) {
        if (s.length() == 0 || s.equals("")) {
            return ' ';
        }
        HashSet<Character> set = new HashSet<>();
        for (int i = 0; i < s.length(); i++) {
            if (set.contains(s.charAt(i))) {
                continue;
            }
            if (s.substring(i + 1, s.length()).indexOf(s.charAt(i)) == -1) {
                return s.charAt(i);
            }
            set.add(s.charAt(i));
        }
        return ' ';
    }
}
