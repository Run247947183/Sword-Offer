方法一：递归
public class Solution {
    public int RectCover(int target) {
        if (target <= 2) {
            return target;
        } else {
            return RectCover(target - 1) + RectCover(target - 2);
        }
    }
}


方法二：
public class Solution {
    public int RectCover(int target) {
        if (target <= 2) {
            return target;
        }
        int first = 2; // target = 2时有两种覆盖方法：横着或者竖着
        int second = 1; // target = 1时只有一种覆盖方法
        for (int i = 3; i <= target; i++) {
            int tmp = first + second;
            second = first;
            first = tmp;
        }
        return first;
    }
}
