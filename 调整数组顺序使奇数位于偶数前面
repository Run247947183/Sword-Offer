public class Solution {
    public void reOrderArray(int [] array) {
        for (int i = 0; i < array.length; i++) {
            if (array[i] % 2 == 0) {
                int j = i;
                // 寻找奇数的坐标
                while (j < array.length && array[j] % 2 == 0) {
                    j++;
                }
                if (j >= array.length) {
                    break;
                }
                int tmp = array[j]; // 先记录奇数
                // 将前面的偶数往后搬移
                for (int k = j; k > i; k--) {
                    array[k] = array[k - 1];
                }
                array[i] = tmp;
            }
        }
    }
}

// 双指针
class Solution {
    public int[] exchange(int[] nums) {
        int left = 0;
        int right = nums.length - 1;
        while (left < right) {
            while (left < right && nums[left] % 2 != 0) {
                left++;
            }
            while (left < right && nums[right] % 2 == 0) {
                right--;
            }
            swap(nums, left, right);
        }
        return nums;
    }
    public void swap(int[] arr, int x, int y) {
        int tmp = arr[x];
        arr[x] = arr[y];
        arr[y] = tmp;
    }
}
