/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    // 只要 B 在 A 中出现过该子结构就算 true
    public boolean isSubStructure(TreeNode A, TreeNode B) {
        if (A == null || B == null) {
            return false;
        }
        boolean tag = false;
        if (A.val == B.val) {
            tag = isSameTree(A, B);
        }
        if (!tag) {
            tag = isSubStructure(A.left, B);
        }
        if (!tag) {
            tag = isSubStructure(A.right, B);
        }
        return tag;
    }
    public boolean isSameTree(TreeNode A, TreeNode B) {
        if (B == null) {
            return true;
        }
        // B 不为 Null，A 为 null ，说明 A 中该节点和 B 不同
        if (A == null) {
            return false;
        }
        if (A.val != B.val) {
            return false;
        }
        return isSameTree(A.left, B.left) && isSameTree(A.right, B.right);
    }
}
