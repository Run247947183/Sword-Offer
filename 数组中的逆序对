// 利用合并的排序方法能够满足在规定的时间内运行

public class Solution {
    public int InversePairs(int [] array) {
        return mergeHelper(array, 0, array.length - 1);
    }
    
    public int mergeHelper(int[] array, int left, int right) {
        if (left >= right ) {
            return 0;
        }
        int count = 0;
        int mid = (left + right) / 2;
        count += mergeHelper(array, left, mid);
        count += mergeHelper(array, mid + 1, right);
        
        int len = right - left + 1;
        int[] newArr = new int[len];
        int index = 0;
        int i = left;
        int j = mid + 1;
        while (i <= mid && j <= right) {
            if (array[i] < array[j]) {
                newArr[index++] = array[i++]; 
            } else {
                count = (count + (mid - i + 1)) % 1000000007;
                newArr[index++] = array[j++];
            }
        }
        while (i <= mid) {
            newArr[index++] = array[i++];
        }
        while (j <= right) {
            newArr[index++] = array[j++];
        }
        for (int k = 0; k < len; k++) {
            array[left + k] = newArr[k];
        }
        return count;
    }
}
